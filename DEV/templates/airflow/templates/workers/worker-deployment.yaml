---
# Source: airflow/templates/workers/worker-deployment.yaml
################################
## Airflow Worker Deployment
#################################
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-worker
  labels:
    tier: airflow
    component: worker
    release: release-name
    chart: "airflow-1.13.0"
    heritage: Helm
spec:
  serviceName: release-name-worker
  replicas: 1
  selector:
    matchLabels:
      tier: airflow
      component: worker
      release: release-name
  template:
    metadata:
      labels:
        tier: airflow
        component: worker
        release: release-name
      annotations:
        checksum/metadata-secret: 8c8ccea43b91003b5ed19c1cb7ae904bdbee3fa66010c473b88fb196e3c25e59
        checksum/result-backend-secret: 98a68f230007cfa8f5d3792e1aff843a76b0686409e4a46ab2f092f6865a1b71
        checksum/pgbouncer-config-secret: 1dae2adc757473469686d37449d076b0c82404f61413b58ae68b3c5e99527688
        checksum/webserver-secret-key: 7eb191eee515629491bda48ece53875a9ec7a82acd617888e97521fad3787109
        checksum/kerberos-keytab: 80979996aa3c1f48c95dfbe9bb27191e71f12442a08c0ed834413da9d430fd0e
        checksum/airflow-config: e94617b222246076e52eb53b591ec72dcd3133ae0522342dc46ec8cd8880ac57
        checksum/extra-configmaps: e862ea47e13e634cf17d476323784fa27dac20015550c230953b526182f5cac8
        checksum/extra-secrets: e9582fdd622296c976cbc10a5ba7d6702c28a24fe80795ea5b84ba443a56c827
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    spec:
      nodeSelector:
        {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  component: worker
              topologyKey: kubernetes.io/hostname
            weight: 100
      tolerations:
        []
      topologySpreadConstraints:
        []
      terminationGracePeriodSeconds: 600
      restartPolicy: Always
      serviceAccountName: release-name-airflow-worker
      securityContext: 
        runAsUser: 50000
        fsGroup: 0
      initContainers:
        - name: wait-for-airflow-migrations
          resources:
            {}
          image: apache/airflow:2.8.2
          imagePullPolicy: IfNotPresent
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: config
              mountPath: "/opt/airflow/airflow.cfg"
              subPath: airflow.cfg
              readOnly: true
            - name: config
              mountPath: "/opt/airflow/config/airflow_local_settings.py"
              subPath: airflow_local_settings.py
              readOnly: true
          args:          
            - airflow
            - db
            - check-migrations
            - --migration-wait-timeout=60
          envFrom:          
            []
          env:          
            # Dynamically created environment variables
            # Dynamically created secret envs
            # Extra env          
            # Hard Coded Airflow Envs
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-fernet-key
                  key: fernet-key
            - name: AIRFLOW_HOME
              value: /opt/airflow
            # For Airflow <2.3, backward compatibility; moved to [database] in 2.3
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: release-name-metadata
                  key: connection
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: release-name-metadata
                  key: connection
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  name: release-name-metadata
                  key: connection
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-webserver-secret-key
                  key: webserver-secret-key
            - name: AIRFLOW__CELERY__BROKER_URL
              valueFrom:
                secretKeyRef:
                  name: release-name-broker-url
                  key: connection
      containers:
        - name: worker
          image: apache/airflow:2.8.2
          imagePullPolicy: IfNotPresent
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          args: 
            - bash
            - -c
            - |-
              exec \
              airflow celery worker
          resources:
            {}
          livenessProbe:
            initialDelaySeconds: 10
            timeoutSeconds: 20
            failureThreshold: 5
            periodSeconds: 60
            exec:
              command:
                - sh
                - -c
                - CONNECTION_CHECK_MAX_COUNT=0 exec /entrypoint python -m celery --app airflow.providers.celery.executors.celery_executor.app inspect ping -d celery@$(hostname)
          ports:
            - name: worker-logs
              containerPort: 8793
          volumeMounts:
            - name: logs
              mountPath: "/opt/airflow/logs"
            - name: config
              mountPath: "/opt/airflow/airflow.cfg"
              subPath: airflow.cfg
              readOnly: true
            - name: config
              mountPath: "/opt/airflow/config/airflow_local_settings.py"
              subPath: airflow_local_settings.py
              readOnly: true
          envFrom:          
            []
          env:
            # Only signal the main process, not the process group, to make Warm Shutdown work properly
            - name: DUMB_INIT_SETSID
              value: "0"          
            # Dynamically created environment variables
            # Dynamically created secret envs
            # Extra env          
            # Hard Coded Airflow Envs
            - name: AIRFLOW__CORE__FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-fernet-key
                  key: fernet-key
            - name: AIRFLOW_HOME
              value: /opt/airflow
            # For Airflow <2.3, backward compatibility; moved to [database] in 2.3
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: release-name-metadata
                  key: connection
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              valueFrom:
                secretKeyRef:
                  name: release-name-metadata
                  key: connection
            - name: AIRFLOW_CONN_AIRFLOW_DB
              valueFrom:
                secretKeyRef:
                  name: release-name-metadata
                  key: connection
            - name: AIRFLOW__WEBSERVER__SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-webserver-secret-key
                  key: webserver-secret-key
            - name: AIRFLOW__CELERY__BROKER_URL
              valueFrom:
                secretKeyRef:
                  name: release-name-broker-url
                  key: connection          
        - name: worker-log-groomer
          image: apache/airflow:2.8.2
          imagePullPolicy: IfNotPresent
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          args: 
            - bash
            - /clean-logs
          env:
            - name: AIRFLOW__LOG_RETENTION_DAYS
              value: "15"
            - name: AIRFLOW_HOME
              value: "/opt/airflow"
          resources:
            {}
          volumeMounts:
            - name: logs
              mountPath: "/opt/airflow/logs"
      volumes:
        - name: config
          configMap:
            name: release-name-config
  volumeClaimTemplates:
    - metadata:
        name: logs
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Gi
