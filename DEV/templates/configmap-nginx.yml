apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }

    http {
      server {
        listen 80;
        location / {
            proxy_pass {{ printf "http://%s-%s:%s"  .Values.api.name .Values.ENV .Values.api.service.port }}/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
        }
        location /streamlit/ {
            rewrite ^/streamlit(/.*)$ $1 break;
            proxy_pass {{ printf "http://%s-%s:%s"  .Values.streamlit.name .Values.ENV .Values.streamlit.service.port }}/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
        }

        location /api/ {
            rewrite ^/api(/.*)$ $1 break;
            proxy_pass {{ printf "http://%s-%s:%s"  .Values.api.name .Values.ENV .Values.api.service.port }}/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
        }

        location /prometheus/ {
            rewrite ^/prometheus(/.*)$ $1 break;
            proxy_pass {{ printf "http://%s-%s:%s"  .Values.prometheus.name .Values.ENV .Values.prometheus.service.port }}/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
        }

        location /grafana/ {
            rewrite ^/grafana(/.*)$ $1 break;
            proxy_pass {{ printf "http://%s-%s:%s"  .Values.grafana.name .Values.ENV .Values.grafana.service.port }}/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
        }
      }
    }
