
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-%s-secret"  .Values.database.name .Values.ENV | quote }}
type: Opaque
data:
  POSTGRES_USER: {{ .Values.secret.USER }} # Remplacez cette valeur par votre utilisateur cod√© en base64
  POSTGRES_PASSWORD: {{ .Values.secret.PASSWORD }}
  POSTGRES_DB: {{ .Values.secret.DBNAME }}
---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ printf "%s-%s-pv"  .Values.database.name .Values.ENV | quote }}
spec:
  storageClassName: hostpath
  capacity:
    storage: 7Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/lib/postgresql/data"
    type: DirectoryOrCreate

---

# persistent-volume-claim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ printf "%s-%s-pvc"  .Values.database.name .Values.ENV | quote }}
spec:
  storageClassName: hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ printf "%s-%s"  .Values.database.name .Values.ENV | quote }}
spec:
  selector:
    matchLabels:
      app: {{ printf "%s-%s"  .Values.database.name .Values.ENV | quote }}
  serviceName: {{ printf "%s-%s"  .Values.database.name .Values.ENV | quote }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ printf "%s-%s"  .Values.database.name .Values.ENV | quote }}
    spec:
      containers:
      - name: postgres
        image: {{ .Values.database.image.database | quote }}
        ports:
        - containerPort: 5432
        envFrom:
        - secretRef:
            name: {{ printf "%s-%s-secret"  .Values.database.name .Values.ENV | quote }}
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: hostpath
      resources:
        requests:
          storage: 7Gi

---

apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-%s"  .Values.database.name .Values.ENV | quote }} 
spec:
  type: LoadBalancer
  ports:
    - port: {{ .Values.database.service.port }}
      targetPort: {{ .Values.database.service.targetport }}
  selector:
    app: {{ printf "%s-%s"  .Values.database.name .Values.ENV | quote }}

---

apiVersion: v1
kind: Pod
metadata:
  name: {{ printf "%s-%s-initdb"  .Values.database.name .Values.ENV | quote }}
spec:
  containers:
  - name: init-db
    image: {{ .Values.database.image.initdb | quote }}
    envFrom:
      - secretRef:
          name: {{ printf "%s-%s-secret"  .Values.database.name .Values.ENV | quote }}
    env:
      - name: POSTGRES_HOST
        value: {{ printf "%s-%s"  .Values.database.name .Values.ENV | quote }}
      - name: POSTGRES_PORT
        value: {{ .Values.database.service.port | quote}}
      - name: PYTHONUNBUFFERED
        value: "1"
  restartPolicy: Never

---
